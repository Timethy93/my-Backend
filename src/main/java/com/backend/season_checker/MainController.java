package com.backend.season_checker;

import org.apache.tomcat.util.http.parser.MediaType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/demo")
@CrossOrigin // This means URL's start with /demo (after Application path)
public class MainController {
  @Autowired // This means to get the bean called userRepository
  // Which is auto-generated by Spring, we will use it to handle the data
  private ConnectRepository userRepository;

  @GetMapping(path = "/add", params = { "name", "anfangsDatum", "endDatum", "isFavorit" }) // Map ONLY POST Requests
  public @ResponseBody String addNewUser(String name, String anfangsDatum, String endDatum, boolean isFavorit) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    LebensmittelEntity n = new LebensmittelEntity();
    n.setName(name);
    n.setAnfangsDatum(anfangsDatum);
    n.setEndDatum(endDatum);
    n.setFavorit(isFavorit);
    userRepository.save(n);
    return "Saved";
  }

  @GetMapping(path = "/all")
  public @ResponseBody Iterable<LebensmittelEntity> getAllUsers() {
    // This returns a JSON or XML with the users
    return userRepository.findAll();
  }

  @PostMapping("/test")
  @ResponseBody
  public String addFoo(@RequestParam int id, @RequestParam String name, @RequestParam String anfangsDatum,
      @RequestParam String endDatum, @RequestParam boolean isFavorit) {

    LebensmittelEntity testi = new LebensmittelEntity();
    testi.setAnfangsDatum(anfangsDatum);
    testi.setEndDatum(endDatum);
    testi.setId(id);
    testi.setName(name);
    testi.setFavorit(isFavorit);
    userRepository.save(testi);

    return "ID: " + id + " Name: " + name + "Anfangsdatum: " + anfangsDatum + "fav: " + isFavorit;
  }

  @RequestMapping(path = "/addEntity/{name}/{anfangsDatum}/{endDatum}/{isFavorit}", method = RequestMethod.GET)

  @ResponseBody
  public String getTest(@PathVariable String name, @PathVariable String anfangsDatum, @PathVariable String endDatum,
      @PathVariable boolean isFavorit) {

    LebensmittelEntity entity = new LebensmittelEntity();
    entity.setName(name);
    entity.setAnfangsDatum(anfangsDatum);
    entity.setEndDatum(endDatum);
    entity.setFavorit(isFavorit);
    userRepository.save(entity);

    return "Entity mit Name: " + name + "Anfangsdatum :";
  }

}